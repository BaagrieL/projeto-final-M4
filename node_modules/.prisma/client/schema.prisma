generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model alerta {
  id_alerta      Int                 @id @default(autoincrement())
  tipo_alerta    alerta_tipo_alerta?
  descricao      String?             @db.VarChar(200)
  id_organizacao Int?
  id_doadores    Int?
  organizacao    organizacao?        @relation(fields: [id_organizacao], references: [id_organizacao], onDelete: NoAction, onUpdate: NoAction, map: "alerta_ibfk_1")
  doadores       doadores?           @relation(fields: [id_doadores], references: [id_doadores], onDelete: NoAction, onUpdate: NoAction, map: "alerta_ibfk_2")

  @@index([id_doadores], map: "ida_doadores")
  @@index([id_organizacao], map: "ida_organizacao")
}

model categoria_doacao {
  id_doacao        Int                           @id @default(autoincrement())
  quantidade       Int?
  tipo_doacao      categoria_doacao_tipo_doacao?
  validade         DateTime?                     @db.Date
  descricao_doacao String?                       @db.VarChar(200)
  id_doadores      Int?
  id_organizacao   Int?
  organizacao      organizacao?                  @relation(fields: [id_organizacao], references: [id_organizacao], onDelete: NoAction, onUpdate: NoAction, map: "categoria_doacao_ibfk_1")
  doadores         doadores?                     @relation(fields: [id_doadores], references: [id_doadores], onDelete: NoAction, onUpdate: NoAction, map: "categoria_doacao_ibfk_2")
  impacto_social   impacto_social[]

  @@index([id_doadores], map: "idc_doadores")
  @@index([id_organizacao], map: "idc_organizacao")
}

model doadores {
  nome             String?            @db.VarChar(200)
  idade            Int?
  email            String?            @db.VarChar(200)
  id_doadores      Int                @id @default(autoincrement())
  alerta           alerta[]
  categoria_doacao categoria_doacao[]
  feedback         feedback[]
  organizacao      organizacao[]
}

model feedback {
  id_feedback        Int               @id @default(autoincrement())
  critica            feedback_critica?
  feedback_descricao String?           @db.VarChar(400)
  id_organizacao     Int?
  id_doadores        Int?
  organizacao        organizacao?      @relation(fields: [id_organizacao], references: [id_organizacao], onDelete: NoAction, onUpdate: NoAction, map: "feedback_ibfk_1")
  doadores           doadores?         @relation(fields: [id_doadores], references: [id_doadores], onDelete: NoAction, onUpdate: NoAction, map: "feedback_ibfk_2")

  @@index([id_doadores], map: "idf_doadores")
  @@index([id_organizacao], map: "idf_organizacao")
}

model impacto_social {
  id_impacto       Int               @id @default(autoincrement())
  id_organizacao   Int?
  id_localizacao   Int?
  id_doacao        Int?
  organizacao      organizacao?      @relation(fields: [id_organizacao], references: [id_organizacao], onDelete: NoAction, onUpdate: NoAction, map: "impacto_social_ibfk_1")
  localizacao      localizacao?      @relation(fields: [id_localizacao], references: [id_localizacao], onDelete: NoAction, onUpdate: NoAction, map: "impacto_social_ibfk_2")
  categoria_doacao categoria_doacao? @relation(fields: [id_doacao], references: [id_doacao], onDelete: NoAction, onUpdate: NoAction, map: "impacto_social_ibfk_3")

  @@index([id_doacao], map: "idi_doacao")
  @@index([id_localizacao], map: "idi_localizacao")
  @@index([id_organizacao], map: "idi_organizacao")
}

model localizacao {
  id_localizacao Int              @id @default(autoincrement())
  nome           String?          @db.VarChar(200)
  latitude       Decimal?         @db.Decimal(10, 8)
  longitude      Decimal?         @db.Decimal(11, 8)
  id_organizacao Int?
  impacto_social impacto_social[]
  organizacao    organizacao?     @relation(fields: [id_organizacao], references: [id_organizacao], onDelete: Cascade)

  @@index([id_organizacao], map: "idl_organizacao")
}

model organizacao {
  id_organizacao Int     @id @default(autoincrement())
  nome           String? @db.VarChar(200)
  cnpj           String  @unique(map: "cnpj") @db.VarChar(14)
  endereco       String? @db.VarChar(200)
  telefone       String? @db.VarChar(11)
  email          String? @db.VarChar(200)

  voluntarios voluntarios[] // agora sim: uma organização tem vários voluntários

  alerta           alerta[]
  categoria_doacao categoria_doacao[]
  feedback         feedback[]
  impacto_social   impacto_social[]
  localizacao      localizacao[]
  doadores         doadores?          @relation(fields: [id_doadores], references: [id_doadores])
  id_doadores      Int?

  @@index([id_doadores], map: "ido_doadores")
}

model voluntarios {
  id_voluntarios Int         @id @default(autoincrement())
  nome           String?     @db.VarChar(200)
  telefone       String?     @db.VarChar(20)
  idade          Int?
  email          String?     @db.VarChar(200)
  id_organizacao Int
  organizacao    organizacao @relation(fields: [id_organizacao], references: [id_organizacao])
}

enum alerta_tipo_alerta {
  urgente
  n_o_urgente @map("não urgente")
}

enum feedback_critica {
  positiva
  negativa
}

enum categoria_doacao_tipo_doacao {
  roupas
  alimento
  remedio
  higiene
}
